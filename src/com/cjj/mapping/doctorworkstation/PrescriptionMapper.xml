<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cjj.dao.doctorworkstation.PrescriptionMapper" >
  <resultMap id="BaseResultMap" type="com.cjj.po.Prescription" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="registerid" property="registerid" jdbcType="INTEGER" />
    <result column="prescriptioncode" property="prescriptioncode" jdbcType="VARCHAR" />
    <result column="prescriptionname" property="prescriptionname" jdbcType="VARCHAR" />
    <result column="doctorid" property="doctorid" jdbcType="INTEGER" />
    <result column="natureid" property="natureid" jdbcType="INTEGER" />
    <result column="prescriptiontypeid" property="prescriptiontypeid" jdbcType="INTEGER" />
    <result column="classifyid" property="classifyid" jdbcType="INTEGER" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="diagnosis" property="diagnosis" jdbcType="VARCHAR" />
    <result column="prescriptiontime" property="prescriptiontime" jdbcType="TIMESTAMP" />
    <result column="isvalid" property="isvalid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, registerid, prescriptioncode, prescriptionname, doctorid, natureid, prescriptiontypeid, 
    classifyid, note, diagnosis, prescriptiontime, isvalid
  </sql>
  
  <select id="manyConditionsFind" resultType="com.cjj.vo.PrescriptionVo">
  	SELECT p.*,r.registercode,pt.cardcode,pt.patientname,e.employeename,d.departmentname,a1.detailname AS naturename,
	a2.detailname AS prescriptiontypename,a3.detailname AS classifyname FROM prescription p LEFT JOIN register r 
	ON r.id = p.registerid LEFT JOIN patient pt ON pt.id = r.patientid LEFT JOIN employee e ON e.id = p.doctorid 
	LEFT JOIN department d ON d.id = e.departmentid LEFT JOIN attributedetail a1 ON a1.id = p.natureid 
	LEFT JOIN attributedetail a2 ON a2.id = p.prescriptiontypeid LEFT JOIN attributedetail a3 ON a3.id = p.classifyid 
	WHERE p.isvalid = 1 AND R.isvalid = 1 AND LOCATE(#{vo.cardcode,jdbcType=VARCHAR},pt.cardcode) 
	AND LOCATE(#{vo.patientname,jdbcType=VARCHAR},pt.patientname) AND LOCATE(#{vo.prescriptionname,jdbcType=VARCHAR},p.prescriptionname) 
	AND LOCATE(CASE WHEN #{vo.doctorid,jdbcType=INTEGER} = 0 THEN '' ELSE #{vo.doctorid,jdbcType=INTEGER} END,p.doctorid) 
	AND LOCATE(CASE WHEN #{vo.departmentid,jdbcType=INTEGER} = 0 THEN '' ELSE #{vo.departmentid,jdbcType=INTEGER} END,e.departmentid)
	<if test="currentpage==0">
		limit 0, #{pagesize,jdbcType=INTEGER}
	</if>
	<if test="currentpage&gt;0">
		limit ${(currentpage-1)*pagesize},${pagesize}
	</if>
  </select>
  <select id="findRepetitionByCode" resultMap="BaseResultMap">
  	SELECT * FROM prescription WHERE prescriptioncode = #{prescriptioncode,jdbcType=INTEGER}
  </select>
  <select id="findmaxid" resultType="java.lang.Integer">
  	SELECT MAX(id) FROM prescription
  </select>
  <select id="findByid" resultType="com.cjj.vo.PrescriptionVo">
  	SELECT p.*,d.departmentname FROM prescription p LEFT JOIN employee e ON e.id = p.doctorid 
	LEFT JOIN department d ON d.id = e.departmentid WHERE p.isvalid = 1 AND p.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="vagueFind" resultType="com.cjj.vo.PrescriptionVo">
  	SELECT p.id,p.prescriptioncode,p.prescriptiontime,r.registercode,r.registerstatus,pt.cardcode,pt.patientname,pt.sex,pt.age,
	a.detailname AS insuretypename,v.typename AS viptypename,v.typediscount,e.employeename,d.departmentname,
	(SELECT SUM(pd.medicineamount * d.inbulksellprice) FROM prescriptiondetail pd LEFT JOIN drug d 
	ON d.id = pd.drugid WHERE pd.isvalid = 1 AND pd.prescriptionid = p.id) AS beforediscountsum,	
	(SELECT CASE WHEN SUM(pd.medicineamount * d.inbulksellprice) IS NULL THEN 0 ELSE 
	SUM(pd.medicineamount * d.inbulksellprice) END FROM prescriptiondetail pd LEFT JOIN drug d 
	ON d.id = pd.drugid WHERE pd.isvalid = 1 AND d.ismedicare = 1 AND pd.prescriptionid = p.id) AS medicarepay,		
	(SELECT SUM(pd.medicineamount * d.inbulksellprice * v1.typediscount * 0.01) FROM prescriptiondetail pd LEFT JOIN drug d 
	ON d.id = pd.drugid LEFT JOIN prescription p1 ON p1.id = pd.prescriptionid LEFT JOIN register r1 
	ON r1.id = p1.registerid LEFT JOIN patient pt1 ON pt1.id = r1.patientid LEFT JOIN viptype v1 
	ON v1.id = pt1.viptypeid WHERE pd.isvalid = 1 AND pd.prescriptionid = p.id) AS behinddiscountsum,c.privilege,
	(c.cost - (c.cost * 0.1)) AS refund,c.receiptcode 
	FROM prescription p LEFT JOIN register r ON r.id = p.registerid LEFT JOIN patient pt ON pt.id = r.patientid 
	LEFT JOIN attributedetail a ON a.id = pt.insuretypeid LEFT JOIN viptype v ON v.id = pt.viptypeid
	LEFT JOIN employee e ON e.id = p.doctorid LEFT JOIN department d ON d.id = e.departmentid
	LEFT JOIN charge c ON c.prescriptionid = p.id WHERE p.isvalid = 1 AND R.isvalid = 1 AND CASE WHEN c.isvalid IS 
	NULL THEN c.isvalid IS NULL ELSE c.isvalid = 1 END AND (r.registerstatus = 3 OR r.registerstatus = 6) AND 
	(LOCATE(#{contant,jdbcType=VARCHAR},p.prescriptioncode) OR LOCATE(#{contant,jdbcType=VARCHAR},r.registercode) OR 
	LOCATE(#{contant,jdbcType=VARCHAR},pt.patientname) OR LOCATE(#{contant,jdbcType=VARCHAR},d.departmentname) OR 
	LOCATE(#{contant,jdbcType=VARCHAR},e.employeename))
  </select>
  <update id="delete" parameterType="java.lang.Integer">
  	UPDATE prescription SET isvalid = 2 WHERE id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insert" parameterType="com.cjj.po.Prescription" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into prescription (registerid, prescriptioncode, prescriptionname, 
      doctorid, natureid, prescriptiontypeid, 
      classifyid, note, diagnosis, 
      prescriptiontime, isvalid)
    values (#{registerid,jdbcType=INTEGER}, #{prescriptioncode,jdbcType=VARCHAR}, #{prescriptionname,jdbcType=VARCHAR}, 
      #{doctorid,jdbcType=INTEGER}, #{natureid,jdbcType=INTEGER}, #{prescriptiontypeid,jdbcType=INTEGER}, 
      #{classifyid,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR}, #{diagnosis,jdbcType=VARCHAR}, 
      #{prescriptiontime,jdbcType=TIMESTAMP}, #{isvalid,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cjj.po.Prescription" >
    update prescription
    <set >
      <if test="registerid != null" >
        registerid = #{registerid,jdbcType=INTEGER},
      </if>
      <if test="prescriptioncode != null" >
        prescriptioncode = #{prescriptioncode,jdbcType=VARCHAR},
      </if>
      <if test="prescriptionname != null" >
        prescriptionname = #{prescriptionname,jdbcType=VARCHAR},
      </if>
      <if test="doctorid != null" >
        doctorid = #{doctorid,jdbcType=INTEGER},
      </if>
      <if test="natureid != null" >
        natureid = #{natureid,jdbcType=INTEGER},
      </if>
      <if test="prescriptiontypeid != null" >
        prescriptiontypeid = #{prescriptiontypeid,jdbcType=INTEGER},
      </if>
      <if test="classifyid != null" >
        classifyid = #{classifyid,jdbcType=INTEGER},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="diagnosis != null" >
        diagnosis = #{diagnosis,jdbcType=VARCHAR},
      </if>
      <if test="prescriptiontime != null" >
        prescriptiontime = #{prescriptiontime,jdbcType=TIMESTAMP},
      </if>
      <if test="isvalid != null" >
        isvalid = #{isvalid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>